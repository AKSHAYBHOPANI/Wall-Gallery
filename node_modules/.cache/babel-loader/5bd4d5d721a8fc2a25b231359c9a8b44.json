{"ast":null,"code":"var _jsxFileName = \"/Users/akshaybhopani/GitHub/Wall-Gallery/src/Gallery.js\";\nimport './Gallery.css';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Gallery() {\n  // Helper Function to Set Attributes on Gallery Elements\n  function setAttributes(element, attributes) {\n    for (const key in attributes) {\n      element.setAttribute(key, attributes[key]);\n    }\n  }\n\n  function RenderImages(photosArray) {\n    // Render Function Creates Image Elements inside Gallery Element\n    const imageContainer = document.getElementById('gallery');\n    photosArray.forEach(element => {\n      // Create <a> to link to full photo\n      const item = document.createElement('a');\n      setAttributes(item, {\n        href: element.links.download,\n        target: '_blank'\n      }); // Create <img> for photo\n\n      const img = document.createElement('img');\n      setAttributes(img, {\n        src: element.urls.regular,\n        alt: element.alt_description,\n        title: element.alt_description\n      }); // Put <img> inside <a>, then put both inside gallery Element\n\n      item.appendChild(img);\n      imageContainer.appendChild(item);\n    });\n  }\n\n  async function getPhotos() {\n    // async await function to fetch images from Mocky API\n    try {\n      const response = await fetch('https://www.mocky.io/v2/5ecb5c353000008f00ddd5a0');\n      const photosArray = await response.json(); // Pass the photosArray to Render Function\n\n      RenderImages(photosArray);\n    } catch (error) {\n      // Catch any Errors\n      console.log(error);\n    }\n  }\n\n  getPhotos();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wall Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hover on a Image \", /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-mouse-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this), \" to Read Description and Click To Expand \", /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-expand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 102\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      id: \"gallery\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Grid\",\n          color: \"#00BFFF\",\n          height: 100,\n          width: 100,\n          timeout: 3000 //3 secs\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/akshaybhopani/GitHub/Wall-Gallery/src/Gallery.js"],"names":["Loader","Gallery","setAttributes","element","attributes","key","setAttribute","RenderImages","photosArray","imageContainer","document","getElementById","forEach","item","createElement","href","links","download","target","img","src","urls","regular","alt","alt_description","title","appendChild","getPhotos","response","fetch","json","error","console","log"],"mappings":";AAAA,OAAO,eAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAO,+DAAP;;;;AAEA,SAASC,OAAT,GAAmB;AACnB;AACA,WAASC,aAAT,CAAuBC,OAAvB,EAAgCC,UAAhC,EAA4C;AAC1C,SAAK,MAAMC,GAAX,IAAkBD,UAAlB,EAA8B;AAC5BD,MAAAA,OAAO,CAACG,YAAR,CAAqBD,GAArB,EAA0BD,UAAU,CAACC,GAAD,CAApC;AACD;AACF;;AAED,WAASE,YAAT,CAAsBC,WAAtB,EAAmC;AACjC;AACA,UAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAvB;AACAH,IAAAA,WAAW,CAACI,OAAZ,CAAqBT,OAAD,IAAa;AAC/B;AACA,YAAMU,IAAI,GAAGH,QAAQ,CAACI,aAAT,CAAuB,GAAvB,CAAb;AACAZ,MAAAA,aAAa,CAACW,IAAD,EAAO;AAClBE,QAAAA,IAAI,EAAEZ,OAAO,CAACa,KAAR,CAAcC,QADF;AAElBC,QAAAA,MAAM,EAAE;AAFU,OAAP,CAAb,CAH+B,CAO/B;;AACA,YAAMC,GAAG,GAAGT,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAZ;AACAZ,MAAAA,aAAa,CAACiB,GAAD,EAAM;AACjBC,QAAAA,GAAG,EAAEjB,OAAO,CAACkB,IAAR,CAAaC,OADD;AAEjBC,QAAAA,GAAG,EAAEpB,OAAO,CAACqB,eAFI;AAGjBC,QAAAA,KAAK,EAAEtB,OAAO,CAACqB;AAHE,OAAN,CAAb,CAT+B,CAc/B;;AACAX,MAAAA,IAAI,CAACa,WAAL,CAAiBP,GAAjB;AACAV,MAAAA,cAAc,CAACiB,WAAf,CAA2Bb,IAA3B;AACD,KAjBD;AAkBD;;AAED,iBAAec,SAAf,GAA2B;AACzB;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAD,CAA5B;AACA,YAAMrB,WAAW,GAAG,MAAMoB,QAAQ,CAACE,IAAT,EAA1B,CAFE,CAGF;;AACAvB,MAAAA,YAAY,CAACC,WAAD,CAAZ;AACD,KALD,CAKE,OAAOuB,KAAP,EAAc;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AACDJ,EAAAA,SAAS;AACP,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,mDAAoB;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAApB,4DAAiG;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAAjG;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,EAAE,EAAC,SAA5B;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACC,QAAC,MAAD;AACG,UAAA,IAAI,EAAC,MADR;AAEG,UAAA,KAAK,EAAC,SAFT;AAGG,UAAA,MAAM,EAAE,GAHX;AAIG,UAAA,KAAK,EAAE,GAJV;AAKG,UAAA,OAAO,EAAE,IALZ,CAKkB;;AALlB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADF;AAiBD;;KA7DQ1B,O;AA+DT,eAAeA,OAAf","sourcesContent":["import './Gallery.css';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nfunction Gallery() {\n// Helper Function to Set Attributes on Gallery Elements\nfunction setAttributes(element, attributes) {\n  for (const key in attributes) {\n    element.setAttribute(key, attributes[key]);\n  }\n}\n\nfunction RenderImages(photosArray) {\n  // Render Function Creates Image Elements inside Gallery Element\n  const imageContainer = document.getElementById('gallery');\n  photosArray.forEach((element) => {\n    // Create <a> to link to full photo\n    const item = document.createElement('a');\n    setAttributes(item, {\n      href: element.links.download,\n      target: '_blank',\n    });\n    // Create <img> for photo\n    const img = document.createElement('img');\n    setAttributes(img, {\n      src: element.urls.regular,\n      alt: element.alt_description,\n      title: element.alt_description,\n    });\n    // Put <img> inside <a>, then put both inside gallery Element\n    item.appendChild(img);\n    imageContainer.appendChild(item);\n  })\n}\n\nasync function getPhotos() {\n  // async await function to fetch images from Mocky API\n  try {\n    const response = await fetch('https://www.mocky.io/v2/5ecb5c353000008f00ddd5a0');\n    const photosArray = await response.json();\n    // Pass the photosArray to Render Function\n    RenderImages(photosArray);\n  } catch (error) {\n    // Catch any Errors\n    console.log(error);\n  }\n}\ngetPhotos()\n  return (\n    <>\n    <h1>Wall Gallery</h1>\n    <p>Hover on a Image <i class=\"fas fa-mouse-pointer\"></i> to Read Description and Click To Expand <i class=\"fas fa-expand\"></i></p>\n    <div className=\"gallery\" id=\"gallery\">\n    <div className=\"loader\">\n     <Loader\n        type=\"Grid\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      />\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}